# ===============================================================================
# APPLICATION PROPERTIES - GCP PRODUCTION CONFIGURATION
# ===============================================================================

# ------------------------------
# Server Configuration - PORT 80 for GCP
# ------------------------------
# GCP automatically sets PORT=8080, but we want external access on port 80
server.port=8080

# ------------------------------
# Database Configuration - UNCOMMENT YOUR DATABASE
# ------------------------------
# ✅ UNCOMMENT YOUR DATABASE (choose one):

# Option 1: Google Cloud SQL PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://google/metavet-db?cloudSqlInstance=${INSTANCE_CONNECTION_NAME}&socketFactory=com.google.cloud.sql.postgres.SocketFactory&useSSL=false}
spring.datasource.username=${DB_USERNAME:metavet-db}
spring.datasource.password=${DB_PASSWORD:metavet@123}
spring.datasource.driver-class-name=org.postgresql.Driver

# Option 2: Local PostgreSQL (for testing)
# spring.datasource.url=jdbc:postgresql://localhost:5432/metavet
# spring.datasource.username=postgres
# spring.datasource.password=Faizan@123
# spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.leak-detection-threshold=60000
  
# ------------------------------
# Hibernate / JPA Configuration
# ------------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

# Performance optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# ------------------------------
# Logging Configuration - Production Ready
# ------------------------------
logging.level.root=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.cors=DEBUG
logging.level.com.example.demo=DEBUG

# Google Cloud Logging format
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ------------------------------
# CORS Configuration - REMOVE FROM HERE (using Java Config)
# ------------------------------
# ❌ COMMENT OUT - We're using CorsConfig.java instead
# spring.web.cors.allowed-origins=http://34.61.254.251:3000,https://34.61.254.251:3000,http://localhost:3000
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true
# spring.web.cors.max-age=3600

# ------------------------------
# Jackson JSON Configuration
# ------------------------------
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Kolkata
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=NON_NULL

# ------------------------------
# JWT Security Configuration
# ------------------------------
security.jwt.secret-key=${JWT_SECRET_KEY:bXlBY2Nlc3NTZWNyZXRLZXlGb3JKV1RUb2tlbkdlbmVyYXRpb25BbmRWYWxpZGF0aW9uMjAyNA==}
security.jwt.refresh-secret-key=${JWT_REFRESH_SECRET_KEY:bXlSZWZyZXNoU2VjcmV0S2V5Rm9yUmVmcmVzaFRva2VuR2VuZXJhdGlvbjIwMjQ=}
security.jwt.expiration-time=${JWT_EXPIRATION_TIME:86400000}
security.jwt.refresh.expiration-time=${JWT_REFRESH_EXPIRATION_TIME:604800000}

# ------------------------------
# Error Handling Configuration
# ------------------------------
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=false
server.error.path=/error

# ------------------------------
# File Upload Configuration
# ------------------------------
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ------------------------------
# Application Specific Configuration
# ------------------------------
app.otp.expiry-minutes=5
app.otp.length=6
app.pagination.default-page-size=20
app.pagination.max-page-size=100

# ------------------------------
# Session Configuration - Security Enhanced
# ------------------------------
server.servlet.session.cookie.same-site=lax
server.servlet.session.timeout=30m

# ------------------------------
# Health Check Configuration
# ------------------------------
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized
management.health.db.enabled=true

# ------------------------------
# HTTP Configuration
# ------------------------------
spring.mvc.dispatch-options-request=true
spring.web.resources.add-mappings=true

# ------------------------------
# Environment Specific
# ------------------------------
spring.profiles.active=${SPRING_PROFILES_ACTIVE:production}

# ------------------------------
# Google Cloud Specific Configuration
# ------------------------------
spring.cloud.gcp.project-id=${GCP_PROJECT_ID:your-project-id}
spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.database-name=${DB_NAME:metavet-db}
spring.cloud.gcp.sql.instance-connection-name=${INSTANCE_CONNECTION_NAME}

# ------------------------------
# Security Headers (Production)
# ------------------------------
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=${COOKIE_SECURE:false}

# ------------------------------
# Actuator Security
# ------------------------------
management.endpoints.web.base-path=/actuator
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true

# ------------------------------
# Tomcat Configuration for Google Cloud
# ------------------------------
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.forward-headers-strategy=native

# ------------------------------
# Production Optimization
# ------------------------------
server.compression.enabled=true
server.compression.min-response-size=1024
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css